1. let
2. const
3. array destructuring
4. rest operator (array)
    var nos = [3,1,4,2,5]
    var [x,y, ...z] = nos

5. spread operator
    var nos = [3,1,4,2,5]
    var newNos = [ ...nos, 10, 20, 30]

6. object destructuring
    var product = { id : 100, name  :'pen' , cost : 10 }
    var { id, cost } = product 
    var { id : x, cost : y } = product

7. rest operator (object)
    var product = { id : 100, name  :'pen' , cost : 10 }
    var { id : x, ...z } = product

8. spread operator (object)
    var newProduct = { ...product, catgeory : 'stationary' }

9. default arguments
    function add(x = 10,y = 20){
        return x + y;
    }
    add()
    add(100)
    add(undefined, 200)
    add(100,200)

10. arrow function
    /*
    // function statement
    function add(x,y){
        return x + y;
    }

    //function expression
    let add = function(x,y){
        return x + y;
    }

    //arrow function
    let add = (x,y) => {
        return x + y;
    }
    */
    let add = (x,y) => x + y;

11. iterators
    for of construct
    var nos = [3,1,4,2,5]
    
    for(let no of nos)
        console.log(no)

12. template strings
    let x = 100, y = 200
    var s2 = `sum of ${x} and ${y} is ${x+y}`

13. classes
    class Employee {
        id = 0;
        name = '';
        city = '';

        constructor(id, name, city){
            this.id = id;
            this.name = name;
            this.city = city;
        }

        print(){
            console.log(`id = ${this.id}, name = ${this.name}, city = ${this.city}`)
        }

        static GetType(){
            return "Employee"
        }
    }

For more 
    https://es6-features.org

    