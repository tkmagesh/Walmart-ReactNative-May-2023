Magesh Kuppan

Schedule:
    Session-01  : 90 mins
    Tea Break   : 15 mins
    Session-02  : 90 mins
    Tea Break   : 30 mins
    Session-03  : ~

Methodology:
    * No powerpoints
    * Lots of hand-on
    * Github - https://github.com/tkmagesh/Walmart-ReactNative-May-2023

Agenda:
    Day-01 : JS & ES6
    Day-02 & 03 : React & Redux
    Day-04 & 05 : React Native


var emp = {
    name : 'Magesh'
}

function whoAmI(){
    console.log('I am ', this.name)
}

//Execute the whoAmI function in such a way that it prints "I am Magesh"
    Note: DO NOT modify either the object or the function


State
    Application State
        Any data that supports the core domain of the application
        It is HIGHLY LIKELY that this data is needed through out the application
        Changes to this data might have to be recognized and acted up through out the application
        DO NOT keep this state in the component

    UI State
        Any data that supports the presentational needs of the application
        It is HIGHLY UNLIKELY this data is needed in other parts of the application
        Changes to this data might not need be recognized by other parts of the application
        Feel free to keep this state in the component


Hook?

    Handle side-effects in a functional component
    Pure Function
        When the invocation of the function can be replaced with the result of the function without affecting the outcome

    Class Component?
        An instance is created for every usage of the component
        stateful

    Functional Component?
        No instance will be created 


class MyComponent extends React.Component {
    render(){
        return <div>My Component</div>
    }
}

function MyComponent({value}){
    const [value, setValue] = React.useState(100)

    return <div onClick={() => x += 100}>{x}</div>
}


<App>
    <MyComponent value="10"/>
    <MyComponent value="20"/>
</App>

